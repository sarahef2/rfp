// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// survForestFit
SEXP survForestFit(SEXP datasetX_R, SEXP datasetY_R, SEXP datasetCensor_R, SEXP ncat_R, SEXP interval_R, SEXP subjectweight_R, SEXP variableweight_R, SEXP parameters_R, SEXP usecores_R);
RcppExport SEXP _survForest_survForestFit(SEXP datasetX_RSEXP, SEXP datasetY_RSEXP, SEXP datasetCensor_RSEXP, SEXP ncat_RSEXP, SEXP interval_RSEXP, SEXP subjectweight_RSEXP, SEXP variableweight_RSEXP, SEXP parameters_RSEXP, SEXP usecores_RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type datasetX_R(datasetX_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type datasetY_R(datasetY_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type datasetCensor_R(datasetCensor_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ncat_R(ncat_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type interval_R(interval_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type subjectweight_R(subjectweight_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type variableweight_R(variableweight_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type parameters_R(parameters_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type usecores_R(usecores_RSEXP);
    rcpp_result_gen = Rcpp::wrap(survForestFit(datasetX_R, datasetY_R, datasetCensor_R, ncat_R, interval_R, subjectweight_R, variableweight_R, parameters_R, usecores_R));
    return rcpp_result_gen;
END_RCPP
}
// survForestPrint
void survForestPrint(SEXP parameters_R);
RcppExport SEXP _survForest_survForestPrint(SEXP parameters_RSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type parameters_R(parameters_RSEXP);
    survForestPrint(parameters_R);
    return R_NilValue;
END_RCPP
}
// survForestPredict
SEXP survForestPredict(SEXP testsetX_R, SEXP FittedForest_R, SEXP datasetY_R, SEXP datasetCensor_R, SEXP datasetNcat_R, SEXP subjectweight_R, SEXP ObsTrackMat_R, SEXP NodeRegiMat_R, SEXP parameters_R, SEXP usecores_R);
RcppExport SEXP _survForest_survForestPredict(SEXP testsetX_RSEXP, SEXP FittedForest_RSEXP, SEXP datasetY_RSEXP, SEXP datasetCensor_RSEXP, SEXP datasetNcat_RSEXP, SEXP subjectweight_RSEXP, SEXP ObsTrackMat_RSEXP, SEXP NodeRegiMat_RSEXP, SEXP parameters_RSEXP, SEXP usecores_RSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< SEXP >::type testsetX_R(testsetX_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type FittedForest_R(FittedForest_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type datasetY_R(datasetY_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type datasetCensor_R(datasetCensor_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type datasetNcat_R(datasetNcat_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type subjectweight_R(subjectweight_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type ObsTrackMat_R(ObsTrackMat_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type NodeRegiMat_R(NodeRegiMat_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type parameters_R(parameters_RSEXP);
    Rcpp::traits::input_parameter< SEXP >::type usecores_R(usecores_RSEXP);
    rcpp_result_gen = Rcpp::wrap(survForestPredict(testsetX_R, FittedForest_R, datasetY_R, datasetCensor_R, datasetNcat_R, subjectweight_R, ObsTrackMat_R, NodeRegiMat_R, parameters_R, usecores_R));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_survForest_survForestFit", (DL_FUNC) &_survForest_survForestFit, 9},
    {"_survForest_survForestPrint", (DL_FUNC) &_survForest_survForestPrint, 1},
    {"_survForest_survForestPredict", (DL_FUNC) &_survForest_survForestPredict, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_survForest(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
